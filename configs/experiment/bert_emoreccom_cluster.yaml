# @package _global_

# to execute this experiment run:
# python run.py experiment=example_simple.yaml

defaults:
  - override /trainer: default.yaml
  - override /model: bert_classifier_model.yaml
  - override /datamodule: emoreccom_datamodule.yaml
  - override /callbacks: default.yaml
  - override /logger: tensorboard.yaml

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

seed: 12345

trainer:
  gpus: 1
  min_epochs: 1
  max_epochs: 100
  gradient_clip_val: 0.5

model:
  num_classes: 8
  dataset_output: 2
  dropout_rate: 0.2
  # n_train_steps = int(len(train_dataset) / config.batch_size * num_epoch)
  num_train_steps: 15975 # 5112 / 32 * 100
  use_scheduler: True
  lr: 0.00003
  weight_decay: 0.0005
  scheduler_num_warmup_steps: 0
  bert_model_name: squeezebert/squeezebert-uncased
  pretrained_lit_model_for_body_checkpoint: /scratch/users/gsoykan20/projects/emotion-recognition-drawings/logs/runs/2021-11-03/16-38-17/checkpoints/epoch_008.ckpt

datamodule:
  data_dir: /userfiles/comics_grp/datasets/EmoRecCom/
  modality: 1
  text_encoding_max_length: 120
  batch_size: 32
  train_val_test_split: [ 5112, 500, 500 ]
  num_workers: 0
  pin_memory: False
  use_tokenizer_instead_text_preprocessor: True
  tokenizer_name: squeezebert/squeezebert-uncased
  tokenizer_max_len: 80
  use_label_transform: True

callbacks:
  model_checkpoint:
    monitor: "val/micro_auc"
  early_stopping:
    monitor: "val/micro_auc"