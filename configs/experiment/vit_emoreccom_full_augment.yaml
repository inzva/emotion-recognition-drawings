# @package _global_

# to execute this experiment run:
# python run.py experiment=example_simple.yaml

defaults:
  - override /trainer: default.yaml
  - override /model: vit_classifier_model.yaml
  - override /datamodule: emoreccom_datamodule.yaml
  - override /callbacks: default.yaml
  - override /logger: tensorboard.yaml

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

seed: 12345

trainer:
  gpus: 1
  min_epochs: 1
  max_epochs: 100
  gradient_clip_val: 0.5

model:
  feature_extractor_alias: google/vit-base-patch16-224
  model_alias: google/vit-base-patch16-224-in21k
  num_classes: 8
  # n_train_steps = int(len(train_dataset) / config.batch_size * num_epoch)
  num_train_steps: 63900 # 5112 / 8 * 100
  lr: 0.00003
  weight_decay: 0.0005
  use_scheduler: True
  scheduler_num_warmup_steps: 0
  # check DatasetOutput for further information
  dataset_output: 4

datamodule:
  data_dir: /userfiles/comics_grp/datasets/EmoRecCom/
  modality: 2
  batch_size: 8
  train_val_test_split: [ 5112, 500, 500 ]
  num_workers: 0
  pin_memory: False
  use_label_transform: False
  # 0 for no augmentation, 1 for slight, 2 for medium and 3 for full
  # check datamodule > transform_datamodule.py for details
  image_augment_strength: 3

callbacks:
  model_checkpoint:
    monitor: "val/roc_auc_score"
  early_stopping:
    monitor: "val/roc_auc_score"